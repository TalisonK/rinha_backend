version: '3.7'

services:
  db: # banco de dados
    image: postgres:alpine
    container_name: Banco_api_pessoas
    hostname: db
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: api_pessoas
      POSTGRES_HOST: 0.0.0.0
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./changelog/00-configuracao.sql:/docker-entrypoint-initdb.d/00-configuracao.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api1: # instancia 1
    hostname: api1
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3033:3033"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  
  api2: # instancia 2
    hostname: api2
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3034:3033"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  
  nginx: # balanceador de carga
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
  
  adminer: # interface para o banco de dados
    image: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - db

volumes: # volume para persistir os dados do banco de dados
  postgres-db:
